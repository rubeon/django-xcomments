# Generated by Django 4.2.1 on 2023-05-24 21:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(verbose_name='object ID')),
                ('headline', models.CharField(blank=True, max_length=255, verbose_name='headline')),
                ('comment', models.TextField(max_length=3000, verbose_name='comment')),
                ('rating1', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #1')),
                ('rating2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #2')),
                ('rating3', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #3')),
                ('rating4', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #4')),
                ('rating5', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #5')),
                ('rating6', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #6')),
                ('rating7', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #7')),
                ('rating8', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='rating #8')),
                ('valid_rating', models.BooleanField(verbose_name='is valid rating')),
                ('submit_date', models.DateTimeField(auto_now_add=True, verbose_name='date/time submitted')),
                ('is_public', models.BooleanField(verbose_name='is public')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('is_removed', models.BooleanField(help_text='Check this box if the comment is inappropriate. A "This comment has been removed" message will be displayed instead.', verbose_name='is removed')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ('-submit_date',),
            },
        ),
        migrations.CreateModel(
            name='FreeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(verbose_name='object ID')),
                ('comment', models.TextField(max_length=3000, verbose_name='comment')),
                ('person_name', models.CharField(max_length=100, verbose_name="person's name")),
                ('submit_date', models.DateTimeField(verbose_name='date/time submitted')),
                ('is_public', models.BooleanField(verbose_name='is public')),
                ('ip_address', models.GenericIPAddressField(verbose_name='ip address')),
                ('person_email', models.EmailField(max_length=254)),
                ('person_url', models.URLField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
            ],
            options={
                'verbose_name': 'free comment',
                'verbose_name_plural': 'free comments',
                'ordering': ('-submit_date',),
            },
        ),
        migrations.CreateModel(
            name='UserFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_date', models.DateTimeField(auto_now_add=True, verbose_name='flag date')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xcomments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user flag',
                'verbose_name_plural': 'user flags',
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='ModeratorDeletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_date', models.DateTimeField(auto_now_add=True, verbose_name='deletion date')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xcomments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='moderator')),
            ],
            options={
                'verbose_name': 'moderator deletion',
                'verbose_name_plural': 'moderator deletions',
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='KarmaScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.SmallIntegerField(db_index=True, verbose_name='score')),
                ('scored_date', models.DateTimeField(auto_now=True, verbose_name='score date')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xcomments.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'karma score',
                'verbose_name_plural': 'karma scores',
                'unique_together': {('user', 'comment')},
            },
        ),
    ]
